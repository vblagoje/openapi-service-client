from typing import Protocol

from openapi_service_client.providers.converter import OpenAPISpecificationConverter
from openapi_service_client.providers.payload_extractor import FunctionPayloadExtractor
from openapi_service_client.spec import OpenAPISpecification


class LLMProvider(Protocol):
    """
    Specifies how LLM providers integrate with `OpenAPIServiceClient`.

    LLMProvider implementations allow various LLM providers to adapt their specific mechanisms for:

    1. Extracting function invocation details (e.g. names and arguments) from LLM function-calling completions.
    2. Converting OpenAPI specifications into formats that LLMs can understand and utilize for function call generation.
    """

    def get_payload_extractor(self) -> FunctionPayloadExtractor:
        """
        Provides an extractor used to parse and extract function invocation details from payloads generated by the LLM.
        :return: FunctionPayloadExtractor object capable of extracting function names and arguments from the
        LLM-generated payloads
        """
        pass

    def get_schema_converter(self, openapi_spec: OpenAPISpecification) -> OpenAPISpecificationConverter:
        """
        Provides a converter that translates an OpenAPI specification into a format that LLMs can understand and utilize
        for function call generation. This method allows LLM providers to adapt general OpenAPI specs to their specific
        requirements and formats.

        :param openapi_spec: OpenAPI specification to be converted.
        :return: OpenAPISpecificationConverter object capable of converting an OpenAPI specification into a format
        suitable for LLM function call generation.
        """
        pass
